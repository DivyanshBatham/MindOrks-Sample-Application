{"version":3,"sources":["components/Navbar.js","components/Projects/Projects.js","components/Home.js","components/Contact.js","components/Projects/ProjectDetail.js","components/Foobar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","react_router_dom","to","exact","Component","Projects","fetchProjects","count","fakeFetchTimeout","setTimeout","setState","projects","projectsData","slice","isFetching","projectCount","clearInterval","map","project","index","concat","id","key","title","skills","skill","Home","Fragment","components_Projects_Projects","Contact","handleChange","e","defineProperty","target","name","value","handleSubmit","preventDefault","alert","email","message","htmlFor","type","onChange","onClick","ProjectDetail","fetchProject","find","match","params","projectId","_this2","console","log","description","history","goBack","href","repository","live","Foobar","Footer","App","basename","process","components_Navbar","react_router","path","component","components_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75902ccf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// import Logo from \"../assets/logo.svg\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className=\"container\">\r\n          <div className=\"nav\">\r\n            {/* <NavLink to=\"/\" className=\"nav__logo-container\">\r\n               <img src={Logo} alt=\"!NotCurious\"/>\r\n            </NavLink> */}\r\n            <NavLink to=\"/\" className=\"nav__logo\">\r\n              ./assets/Logo\r\n            </NavLink>\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\">\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/projects\">Projects</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/foobar\">Foobar</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/contact\">Contact</NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Data:\r\nimport projectsData from \"./projectsData.json\";\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetching: true\r\n    };\r\n  }\r\n\r\n  fetchProjects = count => {\r\n    this.fakeFetchTimeout = setTimeout(() => {\r\n      this.setState({\r\n        projects: count\r\n          ? projectsData.projects.slice(0, count)\r\n          : projectsData.projects,\r\n        isFetching: false\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchProjects(this.props.projectCount);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.fakeFetchTimeout);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"projects-section\">\r\n        <div className=\"container\">\r\n          <div className=\"projects\">\r\n            <div className=\"section__heading\">./components/Projects</div>\r\n\r\n            <p>\r\n              This component lists the various projects that I have built.\r\n            </p>\r\n\r\n            {this.state.isFetching ? (\r\n              <p> Fake Loading... </p>\r\n            ) : (\r\n              <div className=\"projects__grid\">\r\n                {this.state.projects.map((project, index) => {\r\n                  return (\r\n                    <Link\r\n                      to={`/projects/${project.id}`}\r\n                      className=\"project-container\"\r\n                      key={project.id}\r\n                    >\r\n                      <div className=\"project\">\r\n                        <div className=\"project__title\">{project.title}</div>\r\n                        <hr/>\r\n                        <div className=\"project__skills\">\r\n                          {project.skills.map(skill => (\r\n                            <span className=\"skill\" key={skill}>{skill}</span>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })}\r\n                {this.props.projectCount && (\r\n                  <Link\r\n                    to=\"/projects\"\r\n                    className=\"project-container project-container-more\"\r\n                  >\r\n                    <div className=\"project\">View More</div>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport Projects from \"./Projects/Projects\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className=\"about-section\">\r\n          <div className=\"container\">\r\n            <div className=\"section__heading\">./components/About</div>\r\n            <p>\r\n              This component was created to provide an overview of the project.\r\n            </p>\r\n          </div>\r\n        </section>\r\n        <Projects projectCount={3} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    alert(\"Form submitted\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"contact-section\">\r\n        <div className=\"container\">\r\n          <div className=\"contact\">\r\n            <div className=\"section__heading\">./components/Contact</div>\r\n            <p>This component provides a contact form.</p>\r\n            <form>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"message\">Message</label>\r\n              <textarea\r\n                id=\"message\"\r\n                name=\"message\"\r\n                value={this.state.message}\r\n                onChange={this.handleChange}\r\n              />\r\n              \r\n              <button className=\"primaryButton\" onClick={this.handleSubmit}>Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\n\r\n// Data:\r\nimport projectsData from \"./projectsData.json\";\r\n\r\nclass ProjectDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetching: true\r\n    };\r\n  }\r\n\r\n  fetchProject = id => {\r\n    this.fakeFetchTimeout = setTimeout(() => {\r\n      this.setState({\r\n        project: projectsData.projects.find(project => project.id === id),\r\n        isFetching: false\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchProject(this.props.match.params.projectId);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.fakeFetchTimeout);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <section className=\"project-details-section\">\r\n        <div className=\"container\">\r\n          {this.state.isFetching ? (\r\n            <p> Fake Loading... </p>\r\n          ) : (\r\n            <>\r\n              <div className=\"section__heading\">\r\n                ./components/Projects/ {this.state.project.title}\r\n              </div>\r\n              <p>{this.state.project.description}</p>\r\n\r\n              <div className=\"project__skills\">\r\n                {this.state.project.skills.map(skill => (\r\n                  <span className=\"skill\" key={skill}>{skill}</span>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"project__links\">\r\n                <button\r\n                  className=\"primaryButton\"\r\n                  onClick={() => this.props.history.goBack()}\r\n                >\r\n                  Go Back\r\n                </button>\r\n                <a\r\n                  className=\"primaryButton\"\r\n                  href={this.state.project.repository}\r\n                  target=\"__blank\"\r\n                >\r\n                  Repository\r\n                </a>\r\n                {this.state.project.live && (\r\n                  <a\r\n                    className=\"primaryButton\"\r\n                    href={this.state.project.live}\r\n                    target=\"__blank\"\r\n                  >\r\n                    Live\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetail;\r\n","import React from \"react\";\r\n\r\nconst Foobar = () => {\r\n  return (\r\n    <section className=\"contact-section\">\r\n      <div className=\"container\">\r\n        <div className=\"contact\">\r\n          <div className=\"section__heading\">./components/Foobar</div>\r\n          <p>\r\n            This component was created just to make the number of menu items 4.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Foobar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <div className=\"footer\">© 2019 Divyansh Batham.</div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\n// Components:\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport Projects from \"./components/Projects/Projects\";\nimport ProjectDetail from \"./components/Projects/ProjectDetail\";\nimport Foobar from \"./components/Foobar\";\nimport Footer from \"./components/Footer\";\n\n// Styles (Global):\nimport \"./bootstrap-grid.min.css\";\nimport \"./App.scss\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <main>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route exact path=\"/projects/:projectId\" component={ProjectDetail} />\n          <Route exact path=\"/foobar\" component={Foobar} />\n          <Route exact path=\"/contact\" component={Contact} />\n        </main>\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}